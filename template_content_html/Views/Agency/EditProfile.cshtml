@model HomeHelp.Models.AgencyIndividualModel

@{
    ViewBag.Title = "Agency";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}
@{Html.RenderAction("DisplayMessage", "Base", new { ShowMessage = TempData["ShowMessage"], MessageBody = @TempData["MessageBody"] });}
@using (Html.BeginForm("UpdateProfile", "Agency", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <h2 class="page-header">Edit Profile</h2>


      <!-- begin row -->
    <div class="row">
        <!-- begin col-6 -->
        <div class="col-md-12">
            <!-- begin panel -->
            <div class="panel panel-inverse" data-sortable-id="form-stuff-1">
                <div class="panel-body">
                    @Html.HiddenFor(m => m.AgencyIndividualId)
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group m-b-20">
                                Full Name*
                            </div>
                            <div class="form-group m-b-20">
                                @Html.TextBoxFor(m => m.FullName, new
                       {
                           placeholder = Html.DisplayNameFor(m => m.FullName),
                           @class = "form-control input-lg",
                           //@pattern = "^[a-zA-Z][a-zA-Z0-9]*$",
                           @required = "required"
                       })
                            </div>
                            <div class="form-group m-b-20">
                                @Html.ValidationMessageFor(model => model.FullName, "Please fill the FullName.")
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group m-b-20">
                                Address*
                            </div>
                            <div class="form-group m-b-20">
                                @Html.TextBoxFor(m => m.Address, new
                       {
                           placeholder = Html.DisplayNameFor(m => m.Address),
                           @class = "form-control input-lg",
                           @required = "required",
                           id = "address"
                       })
                                @Html.HiddenFor(m => m.Latitude, new
                       {

                           @class = "form-control input-lg",
                           @id = "Latitude"
                       })
                                @Html.HiddenFor(m => m.Longitude, new
                       {

                           @class = "form-control input-lg",
                           @id = "Longitude"
                       })
                            </div>
                            <div class="form-group m-b-20">
                                @Html.ValidationMessageFor(model => model.FullName, "Please fill the Address.")
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group m-b-20">
                                Email*
                            </div>
                            <div class="form-group m-b-20">
                                @Html.TextBoxFor(m => m.EmailId, new
                       {
                           placeholder = "Email",
                           @class = "form-control input-lg",
                           @type = "email",
                           @pattern = @"^([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}" + @"\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\" + @".)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$",
                           @required = "required",
                           @readonly=true
                       })
                            </div>
                            <div class="form-group m-b-20">
                                @Html.ValidationMessageFor(model => model.EmailId, "Please fill the Email.")
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group m-b-20">
                                Work Rate*
                            </div>
                            <div class="form-group m-b-20">
                                @Html.TextBoxFor(m => m.WorkRate, new
                       {
                           placeholder = "Work Rate",
                           @class = "form-control input-lg",
                           @required = "required",
                           @type = "number",
                           @max = "99"
                       })
                            </div>
                            <div class="form-group m-b-20">
                                @Html.ValidationMessageFor(model => model.WorkRate, "Please fill the work rate.")
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group m-b-20">
                                Contact Number*(Should be 10 digits long and include numeric digit only.)
                            </div>
                            <div class="form-group m-b-20">
                                @Html.TextBoxFor(m => m.ContactNumber, new
                       {
                           placeholder = "Contact Number",
                           @class = "form-control input-lg",
                           @required = "required",
                           @type = "number",
                       })
                            </div>
                            <div class="form-group m-b-20">
                                @Html.ValidationMessageFor(model => model.ContactNumber, "Please fill the Contact number.")
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group m-b-20">
                                Profile Image*
                            </div>
                            <div class="form-group m-b-20">
                                <input type="file" class="form-control input-lg" name="file" id="file">
                            </div>
                            <div class="form-group m-b-20">
                                @*@Html.ValidationMessageFor(model => model.ContactNumber, "Please fill the Contact number.")*@
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="login-buttons">
                                <a href="@Url.Action("Index","Agency")" class="btn btn-success btn-block btn-lg">Cancel</a>
                            </div>

                        </div>
                        <div class="col-md-6">
                            <div class="login-buttons">
                                <button id="btnSubmit" type="submit" class="btn btn-success btn-block btn-lg">Submit</button>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group m-b-20 m-t-20 text-center" style="color:white;font-size:larger">
                            @ViewBag.Error
                        </div>
                    </div>
                </div>
            </div>
            <!-- end panel -->
        </div>
        <!-- end col-6 -->

    </div>
            <!-- end row -->
}
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCnAfcUanP6UV_-jEekg_NwwPUaDJp6it4&libraries=places"></script>
<script type="text/javascript">
    function initMap() {
        var input = document.getElementById('address');
        var autocomplete = new google.maps.places.Autocomplete(input);
        autocomplete.addListener('place_changed', function () {
            var place = autocomplete.getPlace();
            document.getElementById('Latitude').value = place.geometry.location.lat();
            document.getElementById('Longitude').value = place.geometry.location.lng();
            if (!place.geometry) {
                window.alert("No details available for input: '" + place.name + "'");
                return;
            }
            var address = '';
            if (place.address_components) {
                address = [
                  (place.address_components[0] && place.address_components[0].short_name || ''),
                  (place.address_components[1] && place.address_components[1].short_name || ''),
                  (place.address_components[2] && place.address_components[2].short_name || '')
                ].join(' ');
            }
        });
    }
    google.maps.event.addDomListener(window, 'load', initMap);
</script>  